#! /usr/bin/env python
from __future__ import print_function
import xmlrpclib
from sys import argv, exit, stdout
from os import mkdir, makedirs, path
import errno
import argparse

def mkdir_p(path):
    try:
        makedirs(path)
    except OSError as exc: # Python >2.5
        if exc.errno == errno.EEXIST:
            pass
        else: raise

def main(argv):

    parser = argparse.ArgumentParser(description='Syncronize a MoinMoin wiki to disk')
    parser.add_argument('-u', '--username')
    parser.add_argument('-p', '--password')
    parser.add_argument('wiki_url')
    parser.add_argument('output_dir')
    args = parser.parse_args()

    out_dir = args.output_dir
    srcwiki = xmlrpclib.ServerProxy('{0}?action=xmlrpc2'.format(args.wiki_url))
    mc = xmlrpclib.MultiCall(srcwiki)

    p = args.password
    u = args.username
    if p and u:
        print('>> logging in.')
        auth_token = srcwiki.getAuthToken(u, p)
        mc.applyAuthToken(auth_token)

    print('>> Getting all pages...', end='')
    stdout.flush()
    mc.getAllPages()
    mc_res = mc()
    success, allpages = tuple(mc_res)
    print(success, allpages)
    print(' done.')

    for pagename in allpages:
        pagedata = mc.getPage(pagename)
        out_file = out_dir + '/' + pagename + ".moin"
        mkdir_p(path.dirname(out_file))
        with open(out_file, "wb") as f:
            print('Writing {0} to {1}.'.format(pagename.encode('UTF-8'), out_file.encode('UTF-8')))
            f.write(pagedata.encode('UTF-8'))

if __name__ == "__main__":
    exit(main(argv))
