#! /bin/sh

M=/sys/kernel/debug/memlayout

usage() {
	echo "usage: dnuma-test all-to <node>"
	echo "       -- moves all memory to the node <node>"
	echo "	     dnuma-test stripe <base-nid> <end-nid> <pfn-per-stripe>"
	echo "       -- stripe memory between nodes <base-nid> and <end-nid>, inclusive"
	echo "       -- For example, \`stripe 1 2 1\` results in 0-1:1,1-2:2,2-3:1,3-4:2"
	exit 1
}

create_rme () {
	# start end node
	echo "creating rme $1 $2 $3"
	printf "%d" "$1" > $M/start || echo "failed to write $1 to start"
	printf "%d" "$2" > $M/end   || echo "failed to write $2 to end"
	echo "$3" > $M/node  || echo "failed to write $3 to node"
}

[ $# -lt 1 ] && usage
act="$1"; shift

high_pfn=$(printf "%d" "0x$(for i in $M/current/*-*; do
				printf "%s" "$(basename "$i" )" | cut -d- -f2
			    done | sort -rn | head -n1)" )

case "$act" in
	# all-to <node id>
a*)	[ $# -ne 1 ] && usage
	create_rme 0 "$high_pfn" "$1"
	echo 1 > $M/commit
	;;
	# stripe <base-nid> <end-nid> <pfn-per-stripe>
s*)	[ $# -ne 3 ] && usage
	pfn=0
	nid=$1
	pfn_per_stripe=$3
	while [ $pfn -lt $high_pfn ] ; do
		: $((next_pfn = pfn + pfn_per_stripe - 1))
		if [ $next_pfn -gt $high_pfn ]; then
			next_pfn=$high_pfn
		fi
		create_rme $pfn $next_pfn $nid
		: $((nid = nid + 1))
		if [ $nid -gt $2 ]; then
			nid=$1;
		fi
		: $((pfn = next_pfn + 1))
	done
	echo 1 > $M/commit
	;;
*)	usage ;;
esac

