1;

function retval = log2s
  m = 10;
  retval = [ logspace(0, m), logspace(0, m) + 1, logspace(0, m) - 1, logspace(0, m) - 2, logspace(0, m) + 2];
endfunction

#log2s =  [0,1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768,65536];

function retval = decimal_length (n)
  retval = length(sprintf("%u", n));
endfunction

function retval = decimal_lengths (ns)
	retval = arrayfun(@dec_len, ns);
endfunction

function retval = faster_log10 (n)
	retval = ceil(log2(n) / (floor(log2(10)))) + 1;
endfunction

# http://www.snip2code.com/Snippet/104690/Fast-integer-log10-in-C/
function retval = log10c (n)
  retval = floor(floor(log2(n) + 1) * 3 / 10 + 1);
endfunction

semilogx(log2s, decimal_lengths(log2s), "+", log2s, floor(log10(log2s)) + 1, "*", log2s, arrayfun(@faster_log10, log2s), "s", log2s, arrayfun(@log10c, log2s), 'v');

legend("sprintf", "log10", "faster_log10", "log10c");
