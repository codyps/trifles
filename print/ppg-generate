#! /bin/bash
set -euf -o pipefail

if [ $# -ne 2 ]; then
	>&2 echo "usage: $(basename $0) <pph.h-out-file> <ppg-max-num>"
	exit 1
fi

ppg_h="$1"
ppg_max="$2"

if [ $ppg_max -lt 2 ]; then
	>&2 echo "ERROR: minimum ppg_max is 2"
	exit 1
fi

>&2 echo "ppg_max = $ppg_max"

echo "#pragma once"
echo "/* WARNING: DO NOT EDIT. DO NOT CHECK IN. AUTOGENERATED by $0 */"

echo "#define PPG_MAP_0(m, ...)"
echo "#define PPG_MAP_1(m, a) m(a)"

for ((i = 2; i <="$ppg_max"; i++)); do
	: $((j=i-1))
	echo "#define PPG_MAP_$i(m, a, ...) m(a) PPG_MAP_$j(m, __VA_ARGS__)"
done

# TODO: find a better way to handle ARGN() without using large numbers of macro arguments

printf "#define PPG_ARG("
for ((i = 1; i <= "$ppg_max"; i++)); do
	printf "_%s," "$i"
done
echo "N,...) N"

printf "#define PPG_ARGN(...) ARG(__VA_ARGS__"
i="$ppg_max"
while true; do
	printf ",%s" "$i"
	if [ "$i" -eq 0 ]; then
		break
	fi
	: $((i=i-1))
done
echo ")"
