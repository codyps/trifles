#! /bin/bash
user=`git config --get github.user`
token=`git config --get github.token`

api_url="https://github.com/api/v2/yaml"

function check_config() {
	if [ -z "$user" ] || [ -z "$token" ]; then
		warn "aborting: github.user or github.token not set"
		exit 3
	fi
}

function api_call() {
	local call="$1"
	shift
	printf "%s(" "$call"
	printf "%s " $*
	printf ");\n"

	curl -s -u "$user/token:$token" "$api_url/$call" $*
}

function create() {
	local repo="$1"
	local x=`api_call repos/create -F "name=$1" -F 'public=1'`
	
	echo "$x"
}

function delete() {
	local repo="$1"

	local out=`api_call repos/delete/$user/$repo`
	local dtoken=`printf "%s" "$out" | grep delete_token \
		| sed 's/^.*delete_token: \(.*\)$/\1/'`

	echo $out

	if [ -z "$dtoken" ]; then
		warn "delete token not found."
		return 1
	fi

	echo $dtoken
	
	local res
	read -p "Are you sure you want to delete \"$repo\" (type yes):" res
	case $res in
	yes|YES)
		api_call repos/delete/$user/$repo -F "delete_token=$dtoken"
		;;
	*)
		warn "Not removing \"$repo\""
		;;
	esac
}

function ushow() {
	local s_user="$1"
	api_call user/show "$s_user"
}

function rshow() {
	local s_user="$1"

	if [ 2 -eq $# ]; then
		local s_repo="$2"

		api_call repos/show/"$s_user/$s_repo"
		return 0
	fi

	api_call repos/show/"$s_user"
}

function einfo() {
	echo -ne "\033[1;30m>\033[0;36m>\033[1;36m> \033[0m${@}\n"
}

function ewarn() {
	echo -ne "\033[1;30m>\033[0;33m>\033[1;33m> \033[0m${@}\n"
}

function warn() {
	echo "$*" >> /dev/stderr
}

function usage() {
	warn "usage: $0 <add|rm|repo|user> <repo>"
}

function req_param() {
	if [ $1 -lt $2 ]; then
		warn "$action needs at least $1 arguments"
		exit 3
	fi
}

if [ $# -lt 2 ]; then
	usage
	exit 2
fi

check_config

action=$1
shift
case $action in
add)
	req_param 1 $#
	create "$1"	
	;;
rm)
	req_param 1 $#
	delete "$1"
	;;
user)
	req_param 1 $#
	ushow "$1"
	;;
repo*)
	req_param 2 $#
	rshow $*
	;;
*)
	usage
	exit 1
	;;
esac
